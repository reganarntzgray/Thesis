raw_weather <- readRDS("Data/data-ia/raw_weather_ordered")
iowa <- readRDS("Data/data-ia/weather_raw_daily.rds")
choich_Tchwale <- sample(1:195, 1)
choice_Tchwale <- sample(1:195, 1)
choice_Tchwale <- sample(1:195, 1,10)
choice_Tchwale
choice_Tchwale <- sample(1:195, 10,replace = F)
choice_Tchwale
choice_Tchwale_chimungu <- sample(1:99, 10,replace = F)
choice_Tchwale_chimungu_topup <- sample(1:99, 10,replace = F)
choice_Tchwale_chimungu_topup
choice_Tchwale_chimungu_topup <- sample(2:98, 10,replace = F)
choice_Tchwale_chimungu_topup
choice_Tchwale_chimungu_topup <- sample(2:98, 14,replace = F)
choice_Tchwale_chimungu_topup
choice_Tchwale_chimungu_nonben <- sample(38:98,5,replace = F)
choice_Tchwale_chimungu_nonben
choice_Tchwale_chimungu_ben <- sample(16:37,1)
choice_Tchwale_chimungu_ben
q()
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/Data sets for model testing/Iowa")
N <- 99
T <- 58
Dummy <- read.delim("county_region_matrix.txt")
Dummy <- Dummy[,2:9]
Dummy1 <- apply(Dummy,2,as.numeric)
Dummy <- matrix( rep( t(Dummy1) , T ) , ncol = ncol(Dummy1) , byrow = TRUE )
NW <- Dummy[,1]
NC <- Dummy[,2]
NE <- Dummy[,3]
WC <- Dummy[,4]
C <- Dummy[,5]
EC <- Dummy[,6]
SC <- Dummy[,7]
SE <- Dummy[,8]
W <- read.delim("Iowa_W_norm.txt", header=F)
W <- as.matrix(W)
K <- kronecker(diag(T),W)
eig <- eigen(W, symmetric = FALSE, only.values = TRUE)
lambda <- eig$values
rhomin <- (1/min(lambda))
rhomax <- (1/max(lambda))
p_bound <- seq(rhomin,rhomax,.1)
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa")
p_opt <- read.table("p_opt")
p_opt <- p_opt[1,1]
A <- (diag(N*T)-(p_opt*K))
#Dynamic thresholds and beta
thresholds_dynamic <- read.table("thresholds_dynamic")
Beta_dynamic <- read.table("Beta_dynamic")
Beta_dynamic <- as.matrix(Beta_dynamic)
#Static thresholds and beta
threshold_static <- read.table("threshold_static")
Beta_static <- read.table("Beta_static")
Beta_static <-  as.matrix(Beta_static)
#determining variance of the error in the dynamic model
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/Data sets for model testing/Iowa")
yield_data <- readRDS("Data_d_iv_iowa")
Y <- yield_data[,3]
k_dynamic <- thresholds_dynamic[1,1]+thresholds_dynamic[2,1]*yield_data[,4]
Constant<- rep(1,N*T)
Trend <- yield_data[,4]
GDD <- yield_data[,5]
HDD <- yield_data[,6]
VPD_b_i <- yield_data[,7]
VPD_pol_i <- yield_data[,8]
VPD_e_i <- yield_data[,9]
PCP_b_i <- yield_data[,10]
PCP_pol_i <- yield_data[,11]
PCP_e_i <- yield_data[,12]
X1 <- as.matrix(cbind(Constant,Trend,GDD,HDD,VPD_b_i,VPD_pol_i,VPD_e_i,PCP_b_i,PCP_pol_i,PCP_e_i,NW,NC,NE,WC,C,EC,SC,SE))
pcp_pol_sp <- (yield_data$pcp_pol_i-k_dynamic)*(yield_data$pcp_pol_i>k_dynamic)
X <- cbind(X1,pcp_pol_sp)
#doesn't match the models used for projection if you leave it this way
log_L <- function(p)
{A <- (diag(N*T)-p*K)
log_det_I_pW <- log(1-p*lambda)
log_detA <- T*sum(log_det_I_pW)
Beta <- solve(t(A%*%X)%*%(A%*%X))%*%t(A%*%X)%*%(A%*%Y)
U <- Y-X%*%Beta
sigma_sq <- (1/N*T)*(t(U)%*%t(A)%*%A%*%U)
log_L <- (-(N*T)/2)*log(2*pi*sigma_sq)+log_detA-(1/(2*sigma_sq))*t(U)%*%t(A)%*%A%*%U
return(-log_L)}
p_opt <- optim(mean(p_bound),(log_L),method="Brent",lower=rhomin, upper=rhomax)$par
p_opt
p_opt_dyn <- p_opt
p_opt <- read.table("p_opt")
p_opt <- p_opt[1,1]
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa")
p_opt <- read.table("p_opt")
p_opt <- p_opt[1,1]
p_opt
p_opt_dyn
k_static <- threshold_static[1,1]
pcp_pol_sp <- (yield_data$pcp_pol_i-k_static)*(yield_data$pcp_pol_i>k_static)
X <- cbind(X1,pcp_pol_sp)
#####
log_L <- function(p)
{A <- (diag(N*T)-p*K)
log_det_I_pW <- log(1-p*lambda)
log_detA <- T*sum(log_det_I_pW)
Beta <- solve(t(A%*%X)%*%(A%*%X))%*%t(A%*%X)%*%(A%*%Y)
U <- Y-X%*%Beta
sigma_sq <- (1/N*T)*(t(U)%*%t(A)%*%A%*%U)
log_L <- (-(N*T)/2)*log(2*pi*sigma_sq)+log_detA-(1/(2*sigma_sq))*t(U)%*%t(A)%*%A%*%U
return(-log_L)}
p_opt <- optim(mean(p_bound),(log_L),method="Brent",lower=rhomin, upper=rhomax)$par
A <- (diag(N*T)-p_opt*K)
p_opt
p_opt_dyn
p_opt_stat <- p_opt
p_opt_stat
rm(list = ls9)
rm(list = ls())
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/Data sets for model testing/Iowa")
N <- 99
T <- 58
Dummy <- read.delim("county_region_matrix.txt")
Dummy <- Dummy[,2:9]
Dummy1 <- apply(Dummy,2,as.numeric)
Dummy <- matrix( rep( t(Dummy1) , T ) , ncol = ncol(Dummy1) , byrow = TRUE )
NW <- Dummy[,1]
NC <- Dummy[,2]
NE <- Dummy[,3]
WC <- Dummy[,4]
C <- Dummy[,5]
EC <- Dummy[,6]
SC <- Dummy[,7]
SE <- Dummy[,8]
W <- read.delim("Iowa_W_norm.txt", header=F)
W <- as.matrix(W)
K <- kronecker(diag(T),W)
yield_data <- readRDS("Data_d_iv_iowa")
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa")
df <- readRDS("Data_d_iv_iowa_sim_current")
attach(df)
p_opt_dyn <- 0.9419123
p_opt_stat <- 0.94179
A_dyn <- (diag(N*T)-(p_opt_dyn*K))
A_stat <- (diag(N*T)-(p_opt_stat*K))
#Dynamic thresholds and beta
thresholds_dynamic <- read.table("thresholds_dynamic")
threshold_static <- read.table("threshold_static")
k_dynamic <- thresholds_dynamic[1,1]+thresholds_dynamic[2,1]*yield_data[,4]
const <- rep(1,N*T)
X1 <- as.matrix(cbind(const,yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
pcp_pol_sp_d <- (yield_data$pcp_pol_i-k_dynamic)*(yield_data$pcp_pol_i>k_dynamic)
X_dynamic <- cbind(X1,pcp_pol_sp_d)
y <- yield_data[,3]
Ynew_dyn <- A_dyn%*%y
X11 <-  as.matrix(cbind(yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
X_1_d <- cbind(X11,pcp_pol_sp_d)
Xnew_dynamic <- A_dyn%*%X_1_d
mod_dyn <- lm(Ynew_dyn~Xnew_dynamic)
Beta_dynamic <- summary(mod_dyn)$coef[,1]
write.table(Beta_dynamic,"C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa/Beta_dynamic")
e_dynamic <- Ynew-Xnew_dynamic%*%Beta_dynamic
e_dynamic <- Ynew_dyn-Xnew_dynamic%*%Beta_dynamic
Beta_dynamic
e_dynamic <- Ynew_dyn-cbind(const,Xnew_dynamic)%*%Beta_dynamic
sd_e_dyn_county <- NULL
mean_county_error <- NULL
county_num <- seq(1,length(e_dynamic),N)
for(i in 1:N)
{countyi <- e_dynamic[county_num[49:58] +(i-1)]
mean_county_error[i]<- mean(countyi)
sd_e_dyn_county[i] <- sd(countyi)}
k_static <- threshold_static[1,1]
const <- rep(1,N*T)
X1 <- as.matrix(cbind(const,yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
pcp_pol_sp_s <- (yield_data$pcp_pol_i-k_static)*(yield_data$pcp_pol_i>k_static)
X_static <- cbind(X1,pcp_pol_sp_s)
y <- yield_data[,3]
Ynew_stat <- A_stat%*%y
X11 <-  as.matrix(cbind(yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
X_1_s <- cbind(X11,pcp_pol_sp_s)
Xnew_static <- A_stat%*%X_1_s
mod_dyn <- lm(Ynew_dyn~Xnew_dynamic)
mod_stat <- lm(Ynew_stat~Xnew_static)
Beta_static <- summary(mod_stat)$coef[,1]
Beta_static
write.table(Beta_static,"C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa/Beta_static")
e_static <- Ynew-Xnew_static%*%Beta_static
e_static <- Ynew_stat-cbind(const,Xnew_static)%*%Beta_static
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa")
p_opt_dyn <- 0.9419123
write.table(p_opt_stat,"p_opt_stat")
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/Data sets for model testing/Iowa")
N <- 99
T <- 58
Dummy <- read.delim("county_region_matrix.txt")
Dummy <- Dummy[,2:9]
Dummy1 <- apply(Dummy,2,as.numeric)
Dummy <- matrix( rep( t(Dummy1) , T ) , ncol = ncol(Dummy1) , byrow = TRUE )
NW <- Dummy[,1]
NC <- Dummy[,2]
NE <- Dummy[,3]
WC <- Dummy[,4]
C <- Dummy[,5]
EC <- Dummy[,6]
SC <- Dummy[,7]
SE <- Dummy[,8]
W <- read.delim("Iowa_W_norm.txt", header=F)
W <- as.matrix(W)
K <- kronecker(diag(T),W)
yield_data <- readRDS("Data_d_iv_iowa")
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa")
df <- readRDS("Data_d_iv_iowa_sim_current")
attach(df)
p_opt_dyn <- 0.9419123
write.table(p_opt_dyn,"p_opt_dyn")
p_opt_stat <- 0.94179
write.table(p_opt_stat,"p_opt_stat")
A_dyn <- (diag(N*T)-(p_opt_dyn*K))
A_stat <- (diag(N*T)-(p_opt_stat*K))
#Dynamic thresholds and beta
thresholds_dynamic <- read.table("thresholds_dynamic")
#Static thresholds and beta
threshold_static <- read.table("threshold_static")
#solving for the Betas
#dynamic
#determining variance of the error in the dynamic model
k_dynamic <- thresholds_dynamic[1,1]+thresholds_dynamic[2,1]*yield_data[,4]
const <- rep(1,N*T)
X1 <- as.matrix(cbind(const,yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
pcp_pol_sp_d <- (yield_data$pcp_pol_i-k_dynamic)*(yield_data$pcp_pol_i>k_dynamic)
X_dynamic <- cbind(X1,pcp_pol_sp_d)
y <- yield_data[,3]
Ynew_dyn <- A_dyn%*%y
X11 <-  as.matrix(cbind(yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
X_1_d <- cbind(X11,pcp_pol_sp_d)
Xnew_dynamic <- A_dyn%*%X_1_d
mod_dyn <- lm(Ynew_dyn~Xnew_dynamic)
Beta_dynamic <- summary(mod_dyn)$coef[,1]
Beta_dynamic
write.table(Beta_dynamic,"C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa/Beta_dynamic")
e_dynamic <- Ynew_dyn-cbind(const,Xnew_dynamic)%*%Beta_dynamic
#coming up with the approximate variance in standard error for each region in past 10 years so it can be added on
#58 years total - we want 49-58
sd_e_dyn_county <- NULL
mean_county_error <- NULL
county_num <- seq(1,length(e_dynamic),N)
for(i in 1:N)
{countyi <- e_dynamic[county_num[49:58] +(i-1)]
mean_county_error[i]<- mean(countyi)
sd_e_dyn_county[i] <- sd(countyi)}
k_static <- threshold_static[1,1]
const <- rep(1,N*T)
X1 <- as.matrix(cbind(const,yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
pcp_pol_sp_s <- (yield_data$pcp_pol_i-k_static)*(yield_data$pcp_pol_i>k_static)
X_static <- cbind(X1,pcp_pol_sp_s)
y <- yield_data[,3]
Ynew_stat <- A_stat%*%y
X11 <-  as.matrix(cbind(yield_data[,4:ncol(yield_data)],NW,NC,NE,WC,C,EC,SC,SE))
X_1_s <- cbind(X11,pcp_pol_sp_s)
Xnew_static <- A_stat%*%X_1_s
mod_stat <- lm(Ynew_stat~Xnew_static)
Beta_static <- summary(mod_stat)$coef[,1]
Beta_static
p_opt_stat
rm(list = ls())
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/Data sets for model testing/Iowa")
N <- 99
T <- 58
Dummy <- read.delim("county_region_matrix.txt")
Dummy <- Dummy[,2:9]
Dummy1 <- apply(Dummy,2,as.numeric)
Dummy <- matrix( rep( t(Dummy1) , T ) , ncol = ncol(Dummy1) , byrow = TRUE )
NW <- Dummy[,1]
NC <- Dummy[,2]
NE <- Dummy[,3]
WC <- Dummy[,4]
C <- Dummy[,5]
EC <- Dummy[,6]
SC <- Dummy[,7]
SE <- Dummy[,8]
W <- read.delim("Iowa_W_norm.txt", header=F)
W <- as.matrix(W)
K <- kronecker(diag(T),W)
eig <- eigen(W, symmetric = FALSE, only.values = TRUE)
lambda <- eig$values
rhomin <- (1/min(lambda))
rhomax <- (1/max(lambda))
p_bound <- seq(rhomin,rhomax,.1)
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/simulated weather/Iowa")
p_opt <- read.table("p_opt")
p_opt <- p_opt[1,1]
A <- (diag(N*T)-(p_opt*K))
#Dynamic thresholds and beta
thresholds_dynamic <- read.table("thresholds_dynamic")
Beta_dynamic <- read.table("Beta_dynamic")
Beta_dynamic <- as.matrix(Beta_dynamic)
#Static thresholds and beta
threshold_static <- read.table("threshold_static")
Beta_static <- read.table("Beta_static")
Beta_static <-  as.matrix(Beta_static)
#determining variance of the error in the dynamic model
setwd("C:/Users/Regan/Google Drive/Thesis Presentations and Proposal/Thesis/Data needed to complete empirical work/Data sets for model testing/Iowa")
yield_data <- readRDS("Data_d_iv_iowa")
Y <- yield_data[,3]
k_dynamic <- thresholds_dynamic[1,1]+thresholds_dynamic[2,1]*yield_data[,4]
Constant<- rep(1,N*T)
Trend <- yield_data[,4]
GDD <- yield_data[,5]
HDD <- yield_data[,6]
VPD_b_i <- yield_data[,7]
VPD_pol_i <- yield_data[,8]
VPD_e_i <- yield_data[,9]
PCP_b_i <- yield_data[,10]
PCP_pol_i <- yield_data[,11]
PCP_e_i <- yield_data[,12]
X1 <- as.matrix(cbind(Constant,Trend,GDD,HDD,VPD_b_i,VPD_pol_i,VPD_e_i,PCP_b_i,PCP_pol_i,PCP_e_i,NW,NC,NE,WC,C,EC,SC,SE))
pcp_pol_sp <- (yield_data$pcp_pol_i-k_dynamic)*(yield_data$pcp_pol_i>k_dynamic)
X <- cbind(X1,pcp_pol_sp)
k_static <- threshold_static[1,1]
pcp_pol_sp <- (yield_data$pcp_pol_i-k_static)*(yield_data$pcp_pol_i>k_static)
X <- cbind(X1,pcp_pol_sp)
#####
log_L <- function(p)
{A <- (diag(N*T)-p*K)
log_det_I_pW <- log(1-p*lambda)
log_detA <- T*sum(log_det_I_pW)
Beta <- solve(t(A%*%X)%*%(A%*%X))%*%t(A%*%X)%*%(A%*%Y)
U <- Y-X%*%Beta
sigma_sq <- (1/N*T)*(t(U)%*%t(A)%*%A%*%U)
log_L <- (-(N*T)/2)*log(2*pi*sigma_sq)+log_detA-(1/(2*sigma_sq))*t(U)%*%t(A)%*%A%*%U
return(-log_L)}
p_opt <- optim(mean(p_bound),(log_L),method="Brent",lower=rhomin, upper=rhomax)$par
A <- (diag(N*T)-p_opt*K)
####
X11 <- as.matrix(cbind(Trend,GDD,HDD,VPD_b_i,VPD_pol_i,VPD_e_i,PCP_b_i,PCP_pol_i,PCP_e_i,NW,NC,NE,WC,C,EC,SC,SE))
X_1 <- cbind(X11,pcp_pol_sp)
Ynew <- A%*%Y
Xnew <- A%*%X_1
mod_stat <- lm(Ynew~Xnew)
